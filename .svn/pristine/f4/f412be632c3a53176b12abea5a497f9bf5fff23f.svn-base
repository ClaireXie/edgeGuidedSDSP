function [ unary edgePots edgeEnds] = createGraph(candidateH, index, diff, structure, edgeMap, half)

nNodes=size(index,1);
unary=diff.^2;
c=size(candidateH,2);

[rows, cols, s] = find(structure);

fprintf('construct a potts model...\n');

%for ii=1:size(structure)

for i=1:size(cols,1)
    a=rows(i);
    b=cols(i);
    
    tmpMap=zeros(size(edgeMap));
    tmpMap(index(a,1)-half+1:index(a,1)+half-1, index(a,2)-half+1:index(a,2)+half-1)=1;
    tmpMap(index(b,1)-half+1:index(b,1)+half-1, index(b,2)-half+1:index(b,2)+half-1)=...
        tmpMap(index(b,1)-half+1:index(b,1)+half-1, index(b,2)-half+1:index(b,2)+half-1)+1;
    mask=(tmpMap==2);
    maskA=mask(index(a,1)-half+1:index(a,1)+half-1, index(a,2)-half+1:index(a,2)+half-1);
    maskB=mask(index(b,1)-half+1:index(b,1)+half-1, index(b,2)-half+1:index(b,2)+half-1);
    
    for k=1:c    
        overlapDiff = repmat(maskA(:)',c,1).*squeeze(candidateH(a, :, :))- ...
            repmat(maskB(:)'.*squeeze(candidateH(b, k, :))', c, 1);
        edgePots(i, :, k)=sum(overlapDiff.^2, 2);
    end
    
    edgeEnds(i, :)=[a b];
        
end